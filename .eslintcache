[{"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/index.tsx":"1","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/reportWebVitals.ts":"2","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/App.tsx":"3","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/routes/Routes.tsx":"4","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/view/HomeView.tsx":"5","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/navigation/desktopnavigation/Desktopnavigation.tsx":"6","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/routes/RoutingPath.ts":"7","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/view/PostView.tsx":"8","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/view/LoginView.tsx":"9","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/shared/provider/UserProvider.tsx":"10","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/profile/profile.tsx":"11","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/profile/Profile.tsx":"12"},{"size":478,"mtime":1610979880523,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1610979017717,"results":"15","hashOfConfig":"14"},{"size":412,"mtime":1611585884334,"results":"16","hashOfConfig":"14"},{"size":699,"mtime":1611510669987,"results":"17","hashOfConfig":"14"},{"size":126,"mtime":1611509974349,"results":"18","hashOfConfig":"14"},{"size":1117,"mtime":1611590583231,"results":"19","hashOfConfig":"14"},{"size":186,"mtime":1611511394435,"results":"20","hashOfConfig":"14"},{"size":124,"mtime":1611510031249,"results":"21","hashOfConfig":"14"},{"size":1410,"mtime":1611697937892,"results":"22","hashOfConfig":"14"},{"size":424,"mtime":1611585832412,"results":"23","hashOfConfig":"14"},{"size":428,"mtime":1611590495301,"results":"24","hashOfConfig":"14"},{"size":428,"mtime":1611590495301,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"14blbrw",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/index.tsx",[],["53","54"],"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/reportWebVitals.ts",[],"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/App.tsx",[],"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/routes/Routes.tsx",[],"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/view/HomeView.tsx",[],"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/navigation/desktopnavigation/Desktopnavigation.tsx",["55"],"import './Desktopnavigation.css'\nimport Logotype from '../../../shared/images/foodlogo.svg'\nimport { useHistory } from 'react-router-dom'\nimport RoutingPath from '../../../routes/RoutingPath'\nimport { useContext } from 'react'\nimport { UserContext } from '../../../shared/provider/UserProvider'\nimport {Profile} from '../../profile/Profile'\n\nexport const Desktopnavigation = () => {\n    const history = useHistory()\n    const [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\n\n    const displaySignInButtonIfUserIsAuthenticated = () => {\n        \n       return authenticatedUser\n       ? <Profile/> \n       : <span onClick={() => history.push(RoutingPath.loginView)}>Login</span>\n           \n    }\n\n    return (\n        <div className=\"desktopNavigationContainer\">\n            <img className=\"navigationLogotype\" alt=\"Error...\" src={Logotype}></img>\n            <span onClick={() => history.push(RoutingPath.homeView)}>Home</span>\n            <span onClick={() => history.push(RoutingPath.postView)}>Post Recipe</span>\n            {displaySignInButtonIfUserIsAuthenticated()}\n        </div>\n    )\n}\n","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/routes/RoutingPath.ts",[],"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/view/PostView.tsx",[],"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/view/LoginView.tsx",["56"],"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/shared/provider/UserProvider.tsx",[],"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/profile/profile.tsx",["57"],"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/profile/Profile.tsx",["58"],"import { useContext } from 'react'\nimport {UserContext} from '../../shared/provider/UserProvider'\nimport '../profile/Profile.css'\n\nexport const Profile = () => {\n    const [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\n    return (\n        <div>\n            <img src=\"https://thispersondoesnotexist.com/image\" alt=\"\" className=\"profileImg\"/>\n\n            {authenticatedUser.username}\n        </div>\n    )\n}\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":11,"column":31,"nodeType":"65","messageId":"66","endLine":11,"endColumn":51},{"ruleId":"63","severity":1,"message":"67","line":10,"column":12,"nodeType":"65","messageId":"66","endLine":10,"endColumn":29},{"ruleId":"63","severity":1,"message":"64","line":6,"column":31,"nodeType":"65","messageId":"66","endLine":6,"endColumn":51},{"ruleId":"63","severity":1,"message":"64","line":6,"column":31,"nodeType":"65","messageId":"66","endLine":6,"endColumn":51},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"@typescript-eslint/no-unused-vars","'setAuthenticatedUser' is assigned a value but never used.","Identifier","unusedVar","'authenticatedUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]