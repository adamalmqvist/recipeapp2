[{"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/index.tsx":"1","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/reportWebVitals.ts":"2","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/App.tsx":"3","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/routes/Routes.tsx":"4","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/view/HomeView.tsx":"5","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/navigation/desktopnavigation/Desktopnavigation.tsx":"6","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/routes/RoutingPath.ts":"7","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/view/PostView.tsx":"8","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/view/LoginView.tsx":"9","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/shared/provider/UserProvider.tsx":"10","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/profile/profile.tsx":"11","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/profile/Profile.tsx":"12","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/profile/profiledropdown/ProfileDropDown.tsx":"13","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/navigation/desktopnavigation/desktopnavigationtabs/DesktopNavigationTabs.tsx":"14","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/navigation/Navigation.tsx":"15","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/hooks/useWindowDimention.tsx":"16","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/navigation/mobilenavigation/Mobilenavigation.tsx":"17","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/navigation/mobilenavigation/sidebar/SideBar.tsx":"18","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/navigation/mobilenavigation/hamburgerbutton/HamburgerButton.tsx":"19","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/backdrop/BackDrop.tsx":"20"},{"size":478,"mtime":1610979880523,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1610979017717,"results":"23","hashOfConfig":"22"},{"size":372,"mtime":1612347186578,"results":"24","hashOfConfig":"22"},{"size":1048,"mtime":1611826816668,"results":"25","hashOfConfig":"22"},{"size":174,"mtime":1611825068752,"results":"26","hashOfConfig":"22"},{"size":1211,"mtime":1612179545420,"results":"27","hashOfConfig":"22"},{"size":186,"mtime":1611511394435,"results":"28","hashOfConfig":"22"},{"size":124,"mtime":1611510031249,"results":"29","hashOfConfig":"22"},{"size":1472,"mtime":1612782456657,"results":"30","hashOfConfig":"22"},{"size":424,"mtime":1611585832412,"results":"31","hashOfConfig":"22"},{"size":428,"mtime":1611590495301,"results":"32","hashOfConfig":"22"},{"size":586,"mtime":1612110034014,"results":"33","hashOfConfig":"22"},{"size":694,"mtime":1612111246463,"results":"34","hashOfConfig":"22"},{"size":490,"mtime":1612112557799,"results":"35","hashOfConfig":"22"},{"size":684,"mtime":1612463042830,"results":"36","hashOfConfig":"22"},{"size":556,"mtime":1612346891186,"results":"37","hashOfConfig":"22"},{"size":714,"mtime":1612463706429,"results":"38","hashOfConfig":"22"},{"size":307,"mtime":1612351770643,"results":"39","hashOfConfig":"22"},{"size":393,"mtime":1612350902039,"results":"40","hashOfConfig":"22"},{"size":216,"mtime":1612463153083,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"14blbrw",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/index.tsx",[],["90","91"],"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/reportWebVitals.ts",[],"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/App.tsx",[],"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/routes/Routes.tsx",["92","93"],"import { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport {useEffect, useContext} from 'react'\nimport {UserContext} from '../shared/provider/UserProvider'\nimport {HomeView} from '../view/HomeView'\nimport {LoginView} from '../view/LoginView'\nimport {PostView} from '../view/PostView'\nimport RoutingPath from './RoutingPath'\n\n\nexport const Routes = (props: { children: React.ReactChild }) => {\n    const [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\n    const {children} = props;\n\n    useEffect (() => {\n        if (localStorage.getItem(\"user\")) {\n            setAuthenticatedUser({username: localStorage.getItem(\"user\")})\n          }\n    }, [])\n\n    return (\n        <BrowserRouter>\n           {children}\n           <Switch>\n              <Route exact path={RoutingPath.homeView} component={HomeView}/>\n              <Route exact path={RoutingPath.loginView} component={LoginView}/>\n              <Route exact path={RoutingPath.postView} component={PostView}/>\n           </Switch>\n        </BrowserRouter>\n    )\n}","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/view/HomeView.tsx",["94","95"],"import { useEffect, useState } from 'react'\n\nexport const HomeView = () => {\n  \n\n    return (\n        <div>\n            <h1>This is the HomeView!</h1>\n        </div>\n    )\n}\n","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/navigation/desktopnavigation/Desktopnavigation.tsx",["96"],"import './Desktopnavigation.css'\nimport Logotype from '../../../shared/images/foodlogo.svg'\nimport { useHistory } from 'react-router-dom'\nimport RoutingPath from '../../../routes/RoutingPath'\nimport { useContext } from 'react'\nimport { UserContext } from '../../../shared/provider/UserProvider'\nimport {Profile} from '../../profile/Profile'\nimport { DesktopNavigationTabs } from './desktopnavigationtabs/DesktopNavigationTabs'\n\nexport const Desktopnavigation = () => {\n    const history = useHistory()\n    const [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\n\n    const displaySignInButtonIfUserIsntAuthenticated = () => {\n        \n       return authenticatedUser\n          ? <div className=\"profile\"><Profile/> </div>\n          : <span className=\"signInButton\" onClick={() => history.push(RoutingPath.loginView)}>Sign In</span>\n           \n    }\n\n    return (\n        <div className=\"desktopNavigationContainer\">\n            <img className=\"navigationLogotype\" alt=\"Error...\" src={Logotype}></img>\n            <div className=\"deskotopNavigationTabs\">\n            <DesktopNavigationTabs/>\n            </div>\n            {displaySignInButtonIfUserIsntAuthenticated()}\n        </div>\n    )\n}\n","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/routes/RoutingPath.ts",[],"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/view/PostView.tsx",[],"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/view/LoginView.tsx",["97","98"],"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/shared/provider/UserProvider.tsx",[],"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/profile/profile.tsx",["99"],"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/profile/Profile.tsx",["100"],"import { useContext } from 'react'\nimport {UserContext} from '../../shared/provider/UserProvider'\nimport '../profile/Profile.css'\nimport { ProfileDropDown } from './profiledropdown/ProfileDropDown'\n\nexport const Profile = () => {\n    const [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\n    return (\n        <div className=\"profileWrapper\">\n            <img src=\"https://thispersondoesnotexist.com/image\" alt=\"\" className=\"profileImg\"/>\n            <div className=\"usernameP\">{authenticatedUser.username}</div>\n            <ProfileDropDown/>\n        </div>\n    )\n}\n","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/profile/profiledropdown/ProfileDropDown.tsx",["101"],"import {useContext} from 'react'\nimport {UserContext} from '../../../shared/provider/UserProvider'\nimport './ProfileDropDown.css'\nimport {useHistory} from 'react-router-dom'\nimport RoutingPath from '../../../routes/RoutingPath'\n\nexport const ProfileDropDown = () => {\n    const history = useHistory()\n    const [authenticatedUser, setAuthenticatedUser] = useContext(UserContext)\n    const logOut = () => {\n        setAuthenticatedUser(false)\n        localStorage.removeItem(\"user\")\n        history.push(RoutingPath.homeView)\n     }\n\n    return (\n        <div className=\"profileDropdown\">\n           <span onClick={() => logOut()}>\n               logout\n           </span>\n       </div>\n    )\n}\n","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/navigation/desktopnavigation/desktopnavigationtabs/DesktopNavigationTabs.tsx",[],"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/navigation/Navigation.tsx",["102","103"],"import React from 'react'\nimport {Mobilenavigation} from './mobilenavigation/Mobilenavigation'\nimport {Desktopnavigation} from './desktopnavigation/Desktopnavigation'\nimport {useWindowDimention} from '../../hooks/useWindowDimention'\nimport { DesktopNavigationTabs } from './desktopnavigation/desktopnavigationtabs/DesktopNavigationTabs'\n\n\nexport const Navigation = () => {\n    const { height, width } = useWindowDimention()\n    const displayNavigationDependingOnDevice = () => {\n        return (width <= 1000)\n        ? <Mobilenavigation/>\n        : <Desktopnavigation/>\n    }\n    \n    return (\n        <div>\n            {displayNavigationDependingOnDevice()}\n        </div>\n    )\n}\n\n","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/hooks/useWindowDimention.tsx",[],"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/navigation/mobilenavigation/Mobilenavigation.tsx",["104"],"import './Mobilenavigation.css'\nimport Logotype from '../../../shared/images/foodlogo.svg'\nimport { HamburgerButton } from './hamburgerbutton/HamburgerButton'\nimport { SideBar } from './sidebar/SideBar'\nimport{ useState } from 'react'\nimport { BackDrop } from '../../backdrop/BackDrop'\n\nexport const Mobilenavigation = () => {\n    const [openDrawer, setOpenDrawer ] = useState<boolean>(false)\n    return (\n        <div>\n            <HamburgerButton drawerHandler={setOpenDrawer}/>\n            <img className=\"logotype\" src={Logotype}></img>\n            <SideBar drawerIsOpen={openDrawer} drawerHandler={setOpenDrawer}/>\n            {!openDrawer || <BackDrop drawerHandler={setOpenDrawer}/>}\n        </div>\n    )\n}\n","/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/navigation/mobilenavigation/sidebar/SideBar.tsx",[],"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/navigation/mobilenavigation/hamburgerbutton/HamburgerButton.tsx",[],"/Users/adamalmqvist/web-development/recipeapp2/recipeapp/src/components/backdrop/BackDrop.tsx",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":11,"column":12,"nodeType":"111","messageId":"112","endLine":11,"endColumn":29},{"ruleId":"113","severity":1,"message":"114","line":18,"column":8,"nodeType":"115","endLine":18,"endColumn":10,"suggestions":"116"},{"ruleId":"109","severity":1,"message":"117","line":1,"column":10,"nodeType":"111","messageId":"112","endLine":1,"endColumn":19},{"ruleId":"109","severity":1,"message":"118","line":1,"column":21,"nodeType":"111","messageId":"112","endLine":1,"endColumn":29},{"ruleId":"109","severity":1,"message":"119","line":12,"column":31,"nodeType":"111","messageId":"112","endLine":12,"endColumn":51},{"ruleId":"109","severity":1,"message":"120","line":6,"column":10,"nodeType":"111","messageId":"112","endLine":6,"endColumn":29},{"ruleId":"109","severity":1,"message":"110","line":11,"column":12,"nodeType":"111","messageId":"112","endLine":11,"endColumn":29},{"ruleId":"109","severity":1,"message":"119","line":6,"column":31,"nodeType":"111","messageId":"112","endLine":6,"endColumn":51},{"ruleId":"109","severity":1,"message":"119","line":7,"column":31,"nodeType":"111","messageId":"112","endLine":7,"endColumn":51},{"ruleId":"109","severity":1,"message":"110","line":9,"column":12,"nodeType":"111","messageId":"112","endLine":9,"endColumn":29},{"ruleId":"109","severity":1,"message":"121","line":5,"column":10,"nodeType":"111","messageId":"112","endLine":5,"endColumn":31},{"ruleId":"109","severity":1,"message":"122","line":9,"column":13,"nodeType":"111","messageId":"112","endLine":9,"endColumn":19},{"ruleId":"123","severity":1,"message":"124","line":13,"column":13,"nodeType":"125","endLine":13,"endColumn":54},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"@typescript-eslint/no-unused-vars","'authenticatedUser' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAuthenticatedUser'. Either include it or remove the dependency array.","ArrayExpression",["128"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'setAuthenticatedUser' is assigned a value but never used.","'queryByDisplayValue' is defined but never used.","'DesktopNavigationTabs' is defined but never used.","'height' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},"Update the dependencies array to be: [setAuthenticatedUser]",{"range":"131","text":"132"},[675,677],"[setAuthenticatedUser]"]